<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" 
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		">
		
	 <!--
	 	 加载配置属性文件
	 	1:配置数据库相关参数properties的属性：${url}
	  -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc.properties" />
	
	<!-- 2:数据库连接池 -->
	<!-- 数据源配置, 使c3p0 数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
	    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	    <property name="driverClass" value="${driverClassName}" />
	    
		<!-- 基本属性 url、user、password -->
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		
		<!--配置c3p0私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" /> 
		<!--关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!--获取连接超时时间 -->
		<property name="checkoutTimeout" value="3000"/>
		<!--当获取连接失败尝试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>
	
	<!-- 3:配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 配置Mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		
		<!--扫描entity包,使用别名,多个用;隔开-->
        <property name="typeAliasesPackage" value="com.hmj.seckill.entity"/>
        
        <!--扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	
	<!--４:配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的Dao接口-->
        <property name="basePackage" value="com.zenglan.etutor.dao"/>
    </bean>
    
    <!-- RadisDao 
    <bean id="redisDao" class="com.hmj.seckill.dao.cache.RadisDao">
    	<constructor-arg index="0" value="115.159.110.64"/>
    	<constructor-arg index="1" value="6379"/>
    </bean>-->
</beans>